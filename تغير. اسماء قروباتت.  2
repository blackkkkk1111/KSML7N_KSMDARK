const token = "";  

const groupName = ""; 

const targetChannels = [

"" 
];  
let counter = 1;

const Eris = require('eris');
const bot = new Eris(token);

const changeChannelName = async (channelId, newGroupName) => {
  let attempts = 0;
  const maxAttempts = 5;

  while (attempts < maxAttempts) {
    try {
      await bot.editChannel(channelId, { name: newGroupName });
      console.log(`تم تغيير اسم القروب ${channelId} إلى: ${newGroupName}`);
      return;
    } catch (error) {
      attempts++;
      console.error(`خطأ أثناء تغيير اسم القروب ${channelId}: ${error.message}`);

      if (error.code === 429 && error.response && error.response.headers) {
        const retryAfter = parseInt(error.response.headers['retry-after']) || 60000;
        console.error(`تجاوز الحد، الانتظار لمدة ${retryAfter / 1000} ثانية.`);
        await new Promise(resolve => setTimeout(resolve, retryAfter));
      } else if (attempts < maxAttempts) {
        console.log(`إعادة المحاولة (${attempts}/${maxAttempts}) لتغيير اسم القروب ${channelId}`);
        await new Promise(resolve => setTimeout(resolve, 2000 * attempts)); 
      } else {
        console.error(`فشلت جميع المحاولات لتغيير اسم القروب ${channelId}`);
      }
    }
  }
};


const changeChannelsPeriodically = async () => {
  while (true) {
    for (const channelId of targetChannels) {
      const newGroupName = `${groupName} ${counter}`;
      await changeChannelName(channelId, newGroupName);
      counter++;

      if (counter > 200) {
        counter = 1;
      }

      await new Promise(resolve => setTimeout(resolve, 2000)); // التحكم في سرعة تغيير الاسم
    }
  }
};


changeChannelsPeriodically().catch(console.error);

const express = require('express');
const http = require('http');
const app = express();
app.get("/", (req, res) => {
  res.send(`
  <body>
    <center><h1>كسختو لحن</h1></center>
  </body>`);
});

setInterval(() => {
  const now = new Date();
  console.log(now.toLocaleTimeString());
}, 1000);

const server = http.createServer((req, res) => {
  res.setHeader('Content-Type', 'text/html');
  res.end(`
    <html>
      <head>
        <title>كسختو دارك</title>
      </head>
      <body style="margin: 0; padding: 0;">
        <iframe width="100%" height="100%" src="https://axocoder.vercel.app/" frameborder="0" allowfullscreen></iframe>
      </body>
    </html>`);
});

server.listen(8080, () => {
  console.log('I!!m ready nik ksm l7n..24H!!');
  app.listen(3000, () => console.log("I'm Ready To nik ksm dark..! 24H"));
});

bot.on('ready', () => {
  console.log(`Logged in as ${bot.user.username}#${bot.user.discriminator}`);
});

bot.connect();

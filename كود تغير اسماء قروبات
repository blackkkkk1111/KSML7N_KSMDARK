const token = ""; // ضع التوكن هنا


const groupName = ""; 
// اسم قروب

const targetChannels = [
"" 
]; 

const Eris = require('eris');
const client = new Eris(token);

const Bottleneck = require('bottleneck');
const limiter = new Bottleneck({
  minTime: 30, 
  maxConcurrent: 2 
});

let nextGroupNumbers = {};

const changeChannelName = async (channelId, newGroupName) => {
  try {
    await limiter.schedule(() => client.editChannel(channelId, { name: newGroupName }));
    console.log(`تم تغيير اسم القروب ${channelId} إلى: ${newGroupName}`);
    nextGroupNumbers[channelId] = Math.floor(Math.random() * 200) + 1;
  } catch (error) {
    console.error(`فشل لتغيير اسم القروب ${channelId}: ${error.message}`);
    if (error.code === 429) { 
      const retryAfter = parseInt(error.response?.headers['retry-after']) || 10;
      console.error(`تم تجاوز الحد، الانتظار لمدة ${retryAfter} ثانية.`);
      await new Promise(resolve => setTimeout(resolve, retryAfter * 10));
    }
  }
};

const changeChannelsPeriodically = async () => {
  while (true) {
    for (const channelId of targetChannels) {
      const newGroupName = `${groupName} ${Math.floor(Math.random() * 200) + 1}`;
      await changeChannelName(channelId, newGroupName);
      await new Promise(resolve => setTimeout(resolve, 500)); 
    }
    await new Promise(resolve => setTimeout(resolve, 900)); 
  }
};

changeChannelsPeriodically().catch(console.error);

const express = require('express');
const http = require('http');
const app = express();
app.get("/", (req, res) => {
  res.send(`
  <body>
    <center><h1>كسختو لحن</h1></center>
  </body>`);
});

setInterval(() => {
  const now = new Date();
  console.log(now.toLocaleTimeString());
}, 1000);

const server = http.createServer((req, res) => {
  res.setHeader('Content-Type', 'text/html');
  res.end(`
    <html>
      <head>
        <title>كسختو دارك</title>
      </head>
      <body style="margin: 0; padding: 0;">
        <iframe width="100%" height="100%" src="https://axocoder.vercel.app/" frameborder="0" allowfullscreen></iframe>
      </body>
    </html>`);
});

server.listen(8080, () => {
  console.log('I!!m ready nik ksm l7n..24H!!');
  app.listen(3000, () => console.log("I!!m Ready To nik ksm dark..! 24H"));
});

client.on('ready', () => {
  console.log(`تم تسجيل الدخول كـ ${client.user.username}#${client.user.discriminator}`);
});

client.connect();
